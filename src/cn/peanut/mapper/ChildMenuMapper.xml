<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.peanut.mapper.ChildMenuMapper" >
  <resultMap id="BaseResultMap" type="cn.peanut.bean.po.ChildMenu" >
    <id column="child_menu_id" property="childMenuId" jdbcType="INTEGER" />
    <result column="child_menu_name" property="childMenuName" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="INTEGER" />
    <result column="child_menu_url" property="childMenuUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    child_menu_id, child_menu_name, parent_id, child_menu_url
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.peanut.bean.po.ChildMenuExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from child_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from child_menu
    where child_menu_id = #{childMenuId,jdbcType=INTEGER}
  </select>
  <select id="selectByPid" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from child_menu
    where parent_id = #{Pid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from child_menu
    where child_menu_id = #{childMenuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="cn.peanut.bean.po.ChildMenuExample" >
    delete from child_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.peanut.bean.po.ChildMenu" >
    insert into child_menu (child_menu_id, child_menu_name, parent_id, 
      child_menu_url)
    values (#{childMenuId,jdbcType=INTEGER}, #{childMenuName,jdbcType=VARCHAR}, #{parentId,jdbcType=INTEGER}, 
      #{childMenuUrl,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.peanut.bean.po.ChildMenu" >
    insert into child_menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="childMenuId != null" >
        child_menu_id,
      </if>
      <if test="childMenuName != null" >
        child_menu_name,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="childMenuUrl != null" >
        child_menu_url,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="childMenuId != null" >
        #{childMenuId,jdbcType=INTEGER},
      </if>
      <if test="childMenuName != null" >
        #{childMenuName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=INTEGER},
      </if>
      <if test="childMenuUrl != null" >
        #{childMenuUrl,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.peanut.bean.po.ChildMenuExample" resultType="java.lang.Integer" >
    select count(*) from child_menu
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update child_menu
    <set >
      <if test="record.childMenuId != null" >
        child_menu_id = #{record.childMenuId,jdbcType=INTEGER},
      </if>
      <if test="record.childMenuName != null" >
        child_menu_name = #{record.childMenuName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=INTEGER},
      </if>
      <if test="record.childMenuUrl != null" >
        child_menu_url = #{record.childMenuUrl,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update child_menu
    set child_menu_id = #{record.childMenuId,jdbcType=INTEGER},
      child_menu_name = #{record.childMenuName,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=INTEGER},
      child_menu_url = #{record.childMenuUrl,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.peanut.bean.po.ChildMenu" >
    update child_menu
    <set >
      <if test="childMenuName != null and childMenuName !=''" >
        child_menu_name = #{childMenuName,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=INTEGER},
      </if>
      <if test="childMenuUrl != null and childMenuUrl !=''" >
        child_menu_url = #{childMenuUrl,jdbcType=VARCHAR},
      </if>
    </set>
    where child_menu_id = #{childMenuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.peanut.bean.po.ChildMenu" >
    update child_menu
    set child_menu_name = #{childMenuName,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=INTEGER},
      child_menu_url = #{childMenuUrl,jdbcType=VARCHAR}
    where child_menu_id = #{childMenuId,jdbcType=INTEGER}
  </update>
</mapper>